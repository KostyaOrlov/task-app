{"version":3,"sources":["components/DropzoneField/DropzoneField.js","components/Form/Form.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","components/PageNav/PageNav.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["DropzoneField","_this$props","this","props","onImageDrop","image","react_default","a","createElement","className","es","onDrop","multiple","src","preview","alt","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","name","target","id","value","setState","defineProperty","validateField","validateForm","handleImageDrop","files","console","log","img","Image","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","revokeObjectURL","handleSubmit","preventDefault","form","FormData","_this$state","state","email","text","append","fetch","method","body","then","res","json","data","catch","isValidName","isValidEmail","isValidText","isValidForm","fieldName","_this$state2","length","match","_this$state3","onSubmit","htmlFor","type","onChange","DropzoneField_DropzoneField_DropzoneField","disabled","TaskItem","handleTaskUpdate","status","isLoading","params_string","concat","encodeURIComponent","signature","md5","taskText","isError","task","setTimeout","handleChange","handleEdit","isEditMode","handleCheck","checked","handleSave","isAdmin","_this$props$task","username","image_path","react_loader_spinner_default","color","onClick","TaskList","taskList","map","TaskItem_TaskItem_TaskItem","key","PageNav","handlePageChange","_this2","pagesCount","currentpage","arr","i","push","item","Login","handleLogin","login","password","handleLogout","App","getTasks","loginInfo","page","message","tasks","totalCount","total_task_count","Login_Login_Login","Form_Form_Form","PageNav_PageNav_PageNav","Math","ceil","TaskList_TaskList","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00449d4a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./DropzoneField.css\";\r\nimport Image from \"react-image-resizer\";\r\n\r\nexport default class DropzoneField extends Component {\r\n  render() {\r\n    const { onImageDrop, image } = this.props;\r\n    return (\r\n      <div className=\"dropzone-field\">\r\n        <Dropzone className=\"dropzone\" onDrop={onImageDrop} multiple={false}>\r\n          {image ? (\r\n            <img\r\n              className=\"preview-image\"\r\n              src={image.preview}\r\n              alt=\"todo-image\"\r\n            />\r\n          ) : (\r\n            <span>Upload image here</span>\r\n          )}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DropzoneField from \"../DropzoneField/DropzoneField\";\r\nimport \"./Form.css\";\r\n\r\nexport default class Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      text: \"\",\r\n      image: null,\r\n      isValidName: false,\r\n      isValidEmail: false,\r\n      isValidText: false,\r\n      isValidForm: false\r\n    };\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const name = event.target.id;\r\n    let value = event.target.value;\r\n    this.setState(\r\n      {\r\n        [name]: value\r\n      },\r\n      () => {\r\n        this.validateField(name, value);\r\n      },\r\n      this.validateForm\r\n    );\r\n  };\r\n\r\n  validateField(fieldName, value) {\r\n    let { isValidName, isValidEmail, isValidText } = this.state;\r\n\r\n    switch (fieldName) {\r\n      case \"name\":\r\n        isValidName = value.length > 2;\r\n        break;\r\n      case \"email\":\r\n        isValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        break;\r\n      case \"text\":\r\n        isValidText = value.length > 2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState(\r\n      {\r\n        isValidName,\r\n        isValidEmail,\r\n        isValidText\r\n      },\r\n      this.validateForm\r\n    );\r\n  }\r\n\r\n  validateForm() {\r\n    this.setState({\r\n      isValidForm:\r\n        this.state.isValidName &&\r\n        this.state.isValidEmail &&\r\n        this.state.isValidText &&\r\n        !!this.state.image\r\n    });\r\n  }\r\n\r\n  handleImageDrop = files => {\r\n    console.log(files[0].preview);\r\n    const img = new Image();\r\n    img.src = window.URL.createObjectURL(files[0]);\r\n    img.onload = function() {\r\n      var width = img.naturalWidth,\r\n        height = img.naturalHeight;\r\n\r\n      window.URL.revokeObjectURL(img.src);\r\n      console.log(width, height);\r\n    };\r\n    this.setState(\r\n      {\r\n        image: files[0]\r\n      },\r\n      this.validateForm\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = new FormData();\r\n    const { name, email, text, image } = this.state;\r\n    form.append(\"username\", name);\r\n    form.append(\"email\", email);\r\n    form.append(\"text\", text);\r\n    form.append(\"image\", image);\r\n    fetch(\r\n      \"https://uxcandy.com/~shapoval/test-task-backend/create?developer=kostya\",\r\n      {\r\n        method: \"POST\",\r\n        body: form\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => console.log(data))\r\n      .catch(res => console.log(res));\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      text: \"\",\r\n      image: null\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, text, image, isValidForm } = this.state;\r\n    return (\r\n      <form className=\"task-form\" onSubmit={this.handleSubmit}>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"text\">Type your text here</label>\r\n          <textarea\r\n            className=\"textarea\"\r\n            type=\"text\"\r\n            id=\"text\"\r\n            value={text}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </div>\r\n        <DropzoneField onImageDrop={this.handleImageDrop} image={image} />\r\n        <button\r\n          className={isValidForm ? \"btn\" : \"btn btn-inactive\"}\r\n          disabled={!isValidForm}\r\n        >\r\n          Add task\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TaskItem.css\";\r\nimport md5 from \"md5\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskText: \"\",\r\n      isEditMode: false,\r\n      isLoading: false,\r\n      isError: false,\r\n      status: null,\r\n      id: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskText: this.props.task.text,\r\n      status: this.props.task.status,\r\n      id: this.props.task.id\r\n    });\r\n  }\r\n\r\n  handleTaskUpdate = (id, text, status) => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    const form = new FormData();\r\n    form.append(\"text\", text);\r\n    form.append(\"status\", status);\r\n    form.append(\"token\", \"beejee\");\r\n\r\n    let params_string = `${encodeURIComponent(\"status\")}=${encodeURIComponent(\r\n      status\r\n    )}&${encodeURIComponent(\"text\")}=${encodeURIComponent(\r\n      text\r\n    )}&${encodeURIComponent(\"token\")}=${encodeURIComponent(\"beejee\")}`;\r\n    const signature = md5(params_string);\r\n    form.append(\"signature\", signature);\r\n    fetch(\r\n      `https://uxcandy.com/~shapoval/test-task-backend/edit/${id}?developer=kostya`,\r\n      {\r\n        method: \"POST\",\r\n        body: form\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.status === \"ok\") {\r\n          this.setState({\r\n            isLoading: false,\r\n            taskText: text,\r\n            status\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n            isError: true,\r\n            taskText: this.props.task.text,\r\n            status: this.props.task.status\r\n          });\r\n          setTimeout(\r\n            () =>\r\n              this.setState({\r\n                isError: false\r\n              }),\r\n            2500\r\n          );\r\n        }\r\n      })\r\n      .catch(res => console.log(res));\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      taskText: event.target.value\r\n    });\r\n  };\r\n\r\n  handleEdit = () => {\r\n    this.setState({\r\n      isEditMode: !this.state.isEditMode\r\n    });\r\n  };\r\n\r\n  handleCheck = event => {\r\n    const { taskText, id } = this.state;\r\n    if (event.target.checked) {\r\n      this.handleTaskUpdate(id, taskText, 10);\r\n    } else {\r\n      this.handleTaskUpdate(id, taskText, 0);\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    console.log(\"save\");\r\n    const { taskText, status, id } = this.state;\r\n    this.handleTaskUpdate(id, taskText, status);\r\n    this.setState({\r\n      isEditMode: !this.state.isEditMode\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isAdmin,\r\n      task: { username, email, image_path }\r\n    } = this.props;\r\n    const { isEditMode, taskText, status, isError, isLoading } = this.state;\r\n    return (\r\n      <div\r\n        className={status === 10 ? `task-item task-item-avtive` : `task-item`}\r\n      >\r\n        {isAdmin &&\r\n          (isLoading ? (\r\n            <div className=\"loader-container\">\r\n              <Loader type=\"Puff\" color=\"#00BFFF\" height=\"32\" width=\"32\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"task-edit-block\">\r\n              {isEditMode ? (\r\n                <button className=\"btn-edit\" onClick={this.handleSave}>\r\n                  <i className=\"far fa-save fa-2x\" />\r\n                </button>\r\n              ) : (\r\n                <button className=\"btn-edit\" onClick={this.handleEdit}>\r\n                  <i className=\"far fa-edit fa-2x\" />\r\n                </button>\r\n              )}\r\n              <div className=\"checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!!status}\r\n                  onChange={this.handleCheck}\r\n                />\r\n\r\n                {!!status && <i className=\"fas fa-check fa-2x check-icon\" />}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        {isError && <span className=\"err-msg\">Error on update</span>}\r\n        <div className=\"task-user-info\">\r\n          <div className=\"task-name\">{username}</div>\r\n          <div className=\"task-email\">{email}</div>\r\n        </div>\r\n        {isEditMode ? (\r\n          <textarea\r\n            className=\"task-text-edit\"\r\n            value={taskText}\r\n            onChange={this.handleChange}\r\n          />\r\n        ) : (\r\n          <div className=\"task-text\">{taskText}</div>\r\n        )}\r\n        <img className=\"task-image\" src={image_path} alt=\"task image\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\n\r\nexport default class TaskList extends Component {\r\n  render() {\r\n    const { taskList, isAdmin, handleTaskUpdate } = this.props;\r\n    return (\r\n      <div>\r\n        {taskList.map(task => (\r\n          <TaskItem\r\n            task={task}\r\n            key={task.id}\r\n            isAdmin={isAdmin}\r\n            handleTaskUpdate={handleTaskUpdate}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PageNav.css\";\r\n\r\nexport default class PageNav extends Component {\r\n  handlePageChange = id => {\r\n    this.props.handlePageChange(id);\r\n  };\r\n  render() {\r\n    const { pagesCount, currentpage } = this.props;\r\n    const arr = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n      arr.push(i);\r\n    }\r\n\r\n    return (\r\n      <div className=\"page-nav-container\">\r\n        Pages:\r\n        {arr.map(item => (\r\n          <span\r\n            className={\r\n              currentpage === item ? \"page-num page-num-active\" : \"page-num\"\r\n            }\r\n            key={item}\r\n            onClick={() => this.handlePageChange(item)}\r\n          >\r\n            {item}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleLogin = event => {\r\n    event.preventDefault();\r\n    const { login, password } = this.state;\r\n    this.props.handleLogin(login, password);\r\n    this.setState({\r\n      login: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAdmin, handleLogout } = this.props;\r\n    const { login, password } = this.state;\r\n    return (\r\n      <div className=\"login-container\">\r\n        {isAdmin ? (\r\n          <div className=\"loged-in-block\">\r\n            <span>Admin</span>\r\n            <button className=\"btn btn-login\" onClick={handleLogout}>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <form className=\"loged-out-block\">\r\n            <div className=\"input-field input-field-login\">\r\n              <label htmlFor=\"login\">Login</label>\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                id=\"login\"\r\n                value={login}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-field input-field-login\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                className=\"input\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn btn-login\" onClick={this.handleLogin}>\r\n              Login\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport TaskList from \"./components/TaskList/TaskList\";\nimport PageNav from \"./components/PageNav/PageNav\";\nimport Login from \"./components/Login/Login\";\nimport loginInfo from \"./loginInfo.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: [],\n      totalCount: null,\n      currentpage: 1,\n      isAdmin: true\n    };\n  }\n  componentDidMount() {\n    this.getTasks(this.state.currentpage);\n  }\n\n  handlePageChange = id => {\n    this.setState(\n      {\n        currentpage: id\n      },\n      this.getTasks(id)\n    );\n  };\n\n  handleLogout = () => {\n    this.setState({\n      isAdmin: false\n    });\n  };\n\n  handleLogin = (login, password) => {\n    if (login === loginInfo.login && password === loginInfo.password) {\n      this.setState({\n        isAdmin: true\n      });\n    }\n  };\n\n  getTasks = page => {\n    fetch(\n      `https://uxcandy.com/~shapoval/test-task-backend/?developer=kostya&page=${page}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          taskList: data.message.tasks,\n          totalCount: data.message.total_task_count\n        });\n      })\n      .catch(res => console.log(res));\n  };\n\n  render() {\n    const { taskList, totalCount, isAdmin, currentpage } = this.state;\n    return (\n      <div className=\"App\">\n        <Login\n          isAdmin={isAdmin}\n          handleLogout={this.handleLogout}\n          handleLogin={this.handleLogin}\n        />\n        <Form />\n        <PageNav\n          pagesCount={Math.ceil(totalCount / 3)}\n          handlePageChange={this.handlePageChange}\n          currentpage={currentpage}\n        />\n        <TaskList\n          taskList={taskList}\n          isAdmin={isAdmin}\n          handleTaskUpdate={this.handleTaskUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}